plugins {
    id 'java'
}

group = 'com.xcoder'
version = '1.0-SNAPSHOT'

apply from: 'script.gradle'
apply plugin: CustomPlugin
//apply plugin: 'java'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

//sourceSets {
//    main {
//        java {
            //srcDir "$buildDir/generated-sources/querydsl"
//        }

//       resources {
//
//       }
//    }
//
//    test {
//
//    }
//}

repositories {
    // ~/.gradle/caches --offline
    // mavenLocal() // ~/m2/repository
//    maven {
//        name "nexus dmdev"
//        uri "https://"
//    }
    mavenCentral()
    //flatDir {}
}

configurations {
    Configuration configurationImpl = getByName("implementation")

    xcoder {
        description = "xcoder configuration"
    }

    configurationImpl.extendsFrom(xcoder)
}

//configurations.configureEach {
//    resolutionStrategy {
//        force('org.springframework:spring-aop:5.3.8')
//    }
//}

dependencies {
//    compileOnly platform("org.springframework:spring-boot-dependencies:2.5.3")
    compileOnly "jakarta.servlet:jakarta.servlet-api:5.0.0"
    implementation "org.springframework:spring-webmvc:5.3.9"

    //add('implementation', [group: "org.springframework", name: "spring-webmvc", version: "5.3.9"])
    //add('implementation', "org.springframework:spring-webmvc:5.3.9")
//    implementation "org.springframework:spring-webmvc:5.3.9"
//    xcoder "org.springframework:spring-webmvc:5.3.9"
    //implementation("org.springframework:spring-webmvc:5.3.9") {
//        transitive(false)
//        exclude(group: 'org.springframework', module: 'spring-aop')
    //}
//    implementation 'org.springframework:spring-aop:5.3.8'

//    all {
//        resolveStrategy {
//            force('org.springframework:spring-aop:5.3.8')
//        }
//    }
}

//configurations.runtimeClasspath.files.each {println it}

jar {
    def jars = configurations.runtimeClasspath.files.collect {"lib/$it.name"}

    manifest {
        attributes 'Main-Class': 'com.xcoder.HelloWorld', 'Class-Path': jars.join(' ')
    }
//
//    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
//
//    from (configurations.runtimeClasspath.files.collect {zipTree(it)})
}

war {
    archiveName "xcoder.war"
}

task deployTomcat(type: Copy) {
    from(war.archiveFile.get())
    into("/Users/dmatveyenka/Downloads/apache-tomcat-10.0.8/webapps")
}

deployTomcat.dependsOn war
assemble.dependsOn deployTomcat

task copyAllDependecies(type: Copy) {
    from(configurations.runtimeClasspath.files)
    into("$buildDir/libs/lib")
}

jar.dependsOn copyAllDependecies

// buildSrc --- id 'custom'
class CustomPlugin implements Plugin<Project> {

    @Override
    void apply(Project project) {
        def map = ["description": "Hello task", "group": "xcoder", "type": DefaultTask]

        project.task(map, "hello") {
            println "Configuration phase."
            println "task: $description, group: $group, actions: ${actions.size()}"

            doLast {
                println "execution phase, Action1"
            }

            doFirst {
                println "execution phase, Action2"
            }

            doLast {
                println "execution phase, Action3"
            }

            println "task: $description, group: $group, actions: ${actions.size()}"
            println "path task: ${path}"
        }
    }
}
