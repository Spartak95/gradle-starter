plugins {
    id 'java'
}

group = 'com.xcoder'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

println "configuration phase"
println "gradle id: ${gradle.hashCode()}"
println "root: ${rootProject.hashCode()}, ${project.hashCode()}, ${gradle.rootProject.hashCode()}"

//tasks.findByName("hello")

// ==================== 1
//hello.description = "Hello task"
//hello.group = "xcoder"

// ==================== 2
// hello.configure Closure
//hello {
//    println "Configuration phase."
//    description = "Hello task"
//    group = "xcoder"
//}

// ==================== 3
//task("hello") {
//    println "Configuration phase."
//    description = "Hello task"
//    group = "xcoder"
//}

// ==================== 4
//task "hello" {
//    println "Configuration phase."
//    description = "Hello task"
//    group = "xcoder"
//}

// ==================== 5
//task hello {
//    println "Configuration phase."
//    description = "Hello task"
//    group = "xcoder"
//}

//def map = ["description": "Hello task", "group" : "xcoder"];
//task(map, "hello") {
//    println "Configuration phase."
//    println "task: $description, group: $group, actions: ${actions.size()}"
//}

//task hello2 (description: "Hello task", group : "xcoder", type: DefaultTask) {
//    println "Configuration phase."
//    println "task: $description, group: $group, actions: ${actions.size()}"
//}

// Project -> [Task1, Task2, ...]
// Task -> [Action1, Action2, ...] -> action.execution (execution phase)

task hello ("description": "Hello task", "group" : "xcoder") {
    println "Configuration phase."
    println "task: $description, group: $group, actions: ${actions.size()}"

    doLast {
        println "execution phase, Action1"
    }

    doFirst {
        println "execution phase, Action2"
    }

    doLast {
        println "execution phase, Action3"
    }

    println "task: $description, group: $group, actions: ${actions.size()}"
    println "path task: ${path}"
}

//gradle.taskGraph.allTasks
